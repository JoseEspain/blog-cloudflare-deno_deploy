---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import BlogList from '../../components/BlogList.tsx';
import { useTranslations } from '../../i18n/utils';
import type { PostForDisplay } from '../../components/PostCard.tsx';
import type { SearchIndexEntry } from '../../components/SearchBar.tsx';
import { unified } from 'unified';
import remarkParse from 'remark-parse';
import strip from 'strip-markdown';
import remarkStringify from 'remark-stringify';

const t = useTranslations('en');

// 从内容集合中获取所有博客文章
const postsRaw = await getCollection('blog');

const postsForDisplay: PostForDisplay[] = [];
const searchIndex: SearchIndexEntry[] = [];

// 一次性遍历所有文章，准备用于显示和搜索的数据
postsRaw.forEach(post => {  
  // 过滤：英文主页只显示英文文章（以 -en 结尾的文章）
  if (!post.slug.endsWith('-en')) {
    return; // 跳过中文文章
  }
  
  // 1. 准备用于文章列表显示的数据
  postsForDisplay.push({
    slug: post.slug,
    data: post.data,
  });
  
  // 2. 将Markdown内容转换为纯文本，用于搜索
  const plainTextContent = unified()
    .use(remarkParse)
    .use(strip)
    .use(remarkStringify)
    .processSync(post.body)
    .toString()
    .trim();

  // 准备用于搜索索引的数据
  searchIndex.push({
    slug: post.slug,
    title: post.data.title,
    blurb: post.data.blurb,
    tags: post.data.tags,
    content: plainTextContent,
  });
});

// 对文章进行排序：置顶优先，然后按日期倒序
const sortedPosts = postsForDisplay.sort((a, b) => {  
  const pinnedSort = Number(b.data.isPinned ?? false) - Number(a.data.isPinned ?? false);
  if (pinnedSort !== 0) {
    return pinnedSort;
  }
  // 如果置顶状态相同，则按日期排序
  return new Date(b.data.published_at).getTime() - new Date(a.data.published_at).getTime();
});
---

<Layout title={t('site.title')} description={t('site.description')} layoutMode='homepage'>
  
  {/* 将搜索索引数据作为JSON注入到HTML中，供客户端脚本使用 */}
  <script id="search-index" type="application/json" set:html={JSON.stringify(searchIndex)} />

  <div class="max-w-7xl px-4 sm:px-6 lg:px-8 mx-auto">
    <div class="py-8">
      <div class="text-center mb-8">
        <h1 class="text-4xl sm:text-5xl lg:text-6xl font-bold tracking-tight text-gray-900 dark:text-white">
          blog name
        </h1>
        <p class="mt-4 text-lg sm:text-xl text-gray-600 dark:text-gray-300">
          blog content
        </p>
      </div>
      
      {/* 渲染博客文章列表的React组件 */}
      <BlogList posts={sortedPosts} lang="en" client:load />

    </div>
  </div>
</Layout>