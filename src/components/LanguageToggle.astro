---
import { languages } from '../i18n/ui';
import { getLangFromUrl, useTranslations } from '../i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

// 获取当前路径，去除语言前缀
let currentPath = Astro.url.pathname;
if (currentPath.startsWith('/en/')) {
  currentPath = currentPath.substring(3); // 移除 '/en'
} else if (currentPath === '/en') {
  currentPath = '/';
}
currentPath = currentPath || '/';
---

<div class="relative inline-block">
  <button
    id="language-toggle"
    class="flex items-center space-x-0.5 sm:space-x-1 px-2 sm:px-3 py-1.5 sm:py-2 text-xs sm:text-sm font-medium text-gray-700 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white rounded-md hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors"
    aria-label={t('lang.toggle')}
  >
    <svg class="w-3 h-3 sm:w-4 sm:h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5h12M9 3v2m1.048 9.5A18.022 18.022 0 016.412 9m6.088 9h7M11 21l5-10 5 10M12.751 5C11.783 10.77 8.07 15.61 3 18.129"></path>
    </svg>
    <span class="hidden sm:inline">{languages[lang]}</span>
    <svg class="w-2 h-2 sm:w-3 sm:h-3 ml-0.5 sm:ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
    </svg>
  </button>
  
  <div
    id="language-menu"
    class="absolute right-0 mt-2 w-32 bg-white dark:bg-gray-800 rounded-md shadow-lg ring-1 ring-black ring-opacity-5 hidden z-50"
  >
    <div class="py-1">
      {Object.entries(languages).map(([code, name]) => (
        <a
          href={code === 'zh' ? currentPath : `/${code}${currentPath}`}
          class={`block px-4 py-2 text-sm transition-colors ${
            code === lang
              ? 'bg-gray-100 dark:bg-gray-700 text-gray-900 dark:text-white'
              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 hover:text-gray-900 dark:hover:text-white'
          }`}
        >
          {name}
        </a>
      ))}
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const button = document.getElementById('language-toggle');
    const menu = document.getElementById('language-menu');
    
    if (button && menu) {
      button.addEventListener('click', (e) => {
        e.stopPropagation();
        menu.classList.toggle('hidden');
      });
      
      document.addEventListener('click', () => {
        menu.classList.add('hidden');
      });
    }
  });
</script>